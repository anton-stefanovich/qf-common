# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # let's define new path to python include list
  PYTHONPATH: $(Build.Repository.LocalPath)

jobs:
- job: run_package_tests

  displayName: 'Run the package tests:'

  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    matrix:
      # Python27:
      #   python.version: '2.7'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      python -m pip install -U pytest pytest-azurepipelines
      pytest unit_tests --junitxml='junit/test-results.xml'
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

- job: create_package_image_with_next_version

  displayName: 'Create the package image'
  dependsOn: run_package_tests

  steps:
  - script: |
      python3 -m pip install --upgrade pip qf-package
    displayName: 'Install dependencies'

  - script: |
      python3 create_package.py
    displayName: 'running the creation script'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/dist
      artifactName: package_image
